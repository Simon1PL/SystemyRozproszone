//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.5
//
// <auto-generated>
//
// Generated from file `Sth.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;

#pragma warning disable 1591

namespace Shared
{
    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
    [global::System.Serializable]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class CaseError : global::Ice.UserException
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public string reason;

        #endregion

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        private void _initDM()
        {
            this.reason = "";
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public CaseError()
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public CaseError(global::System.Exception ex) : base(ex)
        {
            _initDM();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public CaseError(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
            this.reason = info.GetString("reason");
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        private void _initDM(string reason)
        {
            this.reason = reason;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public CaseError(string reason)
        {
            _initDM(reason);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public CaseError(string reason, global::System.Exception ex) : base(ex)
        {
            _initDM(reason);
        }

        #endregion

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override string ice_id()
        {
            return "::Shared::CaseError";
        }

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override int GetHashCode()
        {
            int h_ = 5381;
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Shared::CaseError");
            global::IceInternal.HashUtil.hashAdd(ref h_, reason);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override bool Equals(object other)
        {
            if(other == null)
            {
                return false;
            }
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            CaseError o = other as CaseError;
            if(o == null)
            {
                return false;
            }
            if(this.reason == null)
            {
                if(o.reason != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.reason.Equals(o.reason))
                {
                    return false;
                }
            }
            return true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override void GetObjectData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
        {
            info.AddValue("reason", this.reason == null ? "" : this.reason);

            base.GetObjectData(info, context);
        }

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator==(CaseError lhs, CaseError rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator!=(CaseError lhs, CaseError rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice("::Shared::CaseError", -1, true);
            ostr_.writeString(reason);
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            reason = istr_.readString();
            istr_.endSlice();
        }

        #endregion
    }

    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class Case1Request : global::System.ICloneable
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public int clientId;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public string name;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public bool hasVat;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case1Request()
        {
            this.name = "";
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case1Request(int clientId, string name, bool hasVat)
        {
            this.clientId = clientId;
            this.name = name;
            this.hasVat = hasVat;
            ice_initialize();
        }

        #endregion

        #region ICloneable members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override int GetHashCode()
        {
            int h_ = 5381;
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Shared::Case1Request");
            global::IceInternal.HashUtil.hashAdd(ref h_, clientId);
            global::IceInternal.HashUtil.hashAdd(ref h_, name);
            global::IceInternal.HashUtil.hashAdd(ref h_, hasVat);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override bool Equals(object other)
        {
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            if(other == null)
            {
                return false;
            }
            if(GetType() != other.GetType())
            {
                return false;
            }
            Case1Request o = (Case1Request)other;
            if(!this.clientId.Equals(o.clientId))
            {
                return false;
            }
            if(this.name == null)
            {
                if(o.name != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.name.Equals(o.name))
                {
                    return false;
                }
            }
            if(!this.hasVat.Equals(o.hasVat))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator==(Case1Request lhs, Case1Request rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator!=(Case1Request lhs, Case1Request rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public void ice_writeMembers(global::Ice.OutputStream ostr)
        {
            ostr.writeInt(this.clientId);
            ostr.writeString(this.name);
            ostr.writeBool(this.hasVat);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public void ice_readMembers(global::Ice.InputStream istr)
        {
            this.clientId = istr.readInt();
            this.name = istr.readString();
            this.hasVat = istr.readBool();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static void ice_write(global::Ice.OutputStream ostr, Case1Request v)
        {
            if(v == null)
            {
                _nullMarshalValue.ice_writeMembers(ostr);
            }
            else
            {
                v.ice_writeMembers(ostr);
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static Case1Request ice_read(global::Ice.InputStream istr)
        {
            var v = new Case1Request();
            v.ice_readMembers(istr);
            return v;
        }

        private static readonly Case1Request _nullMarshalValue = new Case1Request();

        #endregion
    }

    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial struct Case2Request
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public int clientId;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public int number;

        #endregion

        partial void ice_initialize();

        #region Constructor

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case2Request(int clientId, int number)
        {
            this.clientId = clientId;
            this.number = number;
            ice_initialize();
        }

        #endregion

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override int GetHashCode()
        {
            int h_ = 5381;
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Shared::Case2Request");
            global::IceInternal.HashUtil.hashAdd(ref h_, clientId);
            global::IceInternal.HashUtil.hashAdd(ref h_, number);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override bool Equals(object other)
        {
            if(!(other is Case2Request))
            {
                return false;
            }
            Case2Request o = (Case2Request)other;
            if(!this.clientId.Equals(o.clientId))
            {
                return false;
            }
            if(!this.number.Equals(o.number))
            {
                return false;
            }
            return true;
        }

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator==(Case2Request lhs, Case2Request rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator!=(Case2Request lhs, Case2Request rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public void ice_writeMembers(global::Ice.OutputStream ostr)
        {
            ostr.writeInt(this.clientId);
            ostr.writeInt(this.number);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public void ice_readMembers(global::Ice.InputStream istr)
        {
            this.clientId = istr.readInt();
            this.number = istr.readInt();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static void ice_write(global::Ice.OutputStream ostr, Case2Request v)
        {
            v.ice_writeMembers(ostr);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static Case2Request ice_read(global::Ice.InputStream istr)
        {
            var v = new Case2Request();
            v.ice_readMembers(istr);
            return v;
        }

        #endregion
    }

    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class Case3SubModel : global::System.ICloneable
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public int amount;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public string name;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case3SubModel()
        {
            this.name = "";
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case3SubModel(int amount, string name)
        {
            this.amount = amount;
            this.name = name;
            ice_initialize();
        }

        #endregion

        #region ICloneable members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override int GetHashCode()
        {
            int h_ = 5381;
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Shared::Case3SubModel");
            global::IceInternal.HashUtil.hashAdd(ref h_, amount);
            global::IceInternal.HashUtil.hashAdd(ref h_, name);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override bool Equals(object other)
        {
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            if(other == null)
            {
                return false;
            }
            if(GetType() != other.GetType())
            {
                return false;
            }
            Case3SubModel o = (Case3SubModel)other;
            if(!this.amount.Equals(o.amount))
            {
                return false;
            }
            if(this.name == null)
            {
                if(o.name != null)
                {
                    return false;
                }
            }
            else
            {
                if(!this.name.Equals(o.name))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator==(Case3SubModel lhs, Case3SubModel rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator!=(Case3SubModel lhs, Case3SubModel rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public void ice_writeMembers(global::Ice.OutputStream ostr)
        {
            ostr.writeInt(this.amount);
            ostr.writeString(this.name);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public void ice_readMembers(global::Ice.InputStream istr)
        {
            this.amount = istr.readInt();
            this.name = istr.readString();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static void ice_write(global::Ice.OutputStream ostr, Case3SubModel v)
        {
            if(v == null)
            {
                _nullMarshalValue.ice_writeMembers(ostr);
            }
            else
            {
                v.ice_writeMembers(ostr);
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static Case3SubModel ice_read(global::Ice.InputStream istr)
        {
            var v = new Case3SubModel();
            v.ice_readMembers(istr);
            return v;
        }

        private static readonly Case3SubModel _nullMarshalValue = new Case3SubModel();

        #endregion
    }

    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class Case3Request : global::System.ICloneable
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public int clientId;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case3SubModel[] subModelList;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case3Request()
        {
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case3Request(int clientId, Case3SubModel[] subModelList)
        {
            this.clientId = clientId;
            this.subModelList = subModelList;
            ice_initialize();
        }

        #endregion

        #region ICloneable members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override int GetHashCode()
        {
            int h_ = 5381;
            global::IceInternal.HashUtil.hashAdd(ref h_, "::Shared::Case3Request");
            global::IceInternal.HashUtil.hashAdd(ref h_, clientId);
            global::IceInternal.HashUtil.hashAdd(ref h_, subModelList);
            return h_;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override bool Equals(object other)
        {
            if(object.ReferenceEquals(this, other))
            {
                return true;
            }
            if(other == null)
            {
                return false;
            }
            if(GetType() != other.GetType())
            {
                return false;
            }
            Case3Request o = (Case3Request)other;
            if(!this.clientId.Equals(o.clientId))
            {
                return false;
            }
            if(this.subModelList == null)
            {
                if(o.subModelList != null)
                {
                    return false;
                }
            }
            else
            {
                if(!IceUtilInternal.Arrays.Equals(this.subModelList, o.subModelList))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator==(Case3Request lhs, Case3Request rhs)
        {
            return Equals(lhs, rhs);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static bool operator!=(Case3Request lhs, Case3Request rhs)
        {
            return !Equals(lhs, rhs);
        }

        #endregion

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public void ice_writeMembers(global::Ice.OutputStream ostr)
        {
            ostr.writeInt(this.clientId);
            ListHelper.write(ostr, this.subModelList);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public void ice_readMembers(global::Ice.InputStream istr)
        {
            this.clientId = istr.readInt();
            this.subModelList = ListHelper.read(istr);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static void ice_write(global::Ice.OutputStream ostr, Case3Request v)
        {
            if(v == null)
            {
                _nullMarshalValue.ice_writeMembers(ostr);
            }
            else
            {
                v.ice_writeMembers(ostr);
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static Case3Request ice_read(global::Ice.InputStream istr)
        {
            var v = new Case3Request();
            v.ice_readMembers(istr);
            return v;
        }

        private static readonly Case3Request _nullMarshalValue = new Case3Request();

        #endregion
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public enum Response
    {
        Fail,
        Git,
        Sth
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public sealed class ResponseHelper
    {
        public static void write(global::Ice.OutputStream ostr, Response v)
        {
            ostr.writeEnum((int)v, 2);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static Response read(global::Ice.InputStream istr)
        {
            Response v;
            v = (Response)istr.readEnum(2);
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public enum @Case
    {
        Case1,
        Case2,
        Case3
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public sealed class CaseHelper
    {
        public static void write(global::Ice.OutputStream ostr, @Case v)
        {
            ostr.writeEnum((int)v, 2);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static @Case read(global::Ice.InputStream istr)
        {
            @Case v;
            v = (@Case)istr.readEnum(2);
            return v;
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class CaseResponse : global::Ice.Value
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public @Case @case;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Response result;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public CaseResponse()
        {
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public CaseResponse(@Case @case, Response result)
        {
            this.@case = @case;
            this.result = result;
            ice_initialize();
        }

        #endregion

        private const string _id = "::Shared::CaseResponse";

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static new string ice_staticId()
        {
            return _id;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override string ice_id()
        {
            return _id;
        }

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, true);
            ostr_.writeEnum((int)@case, 2);
            ostr_.writeEnum((int)result, 2);
            ostr_.endSlice();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            @case = (@Case)istr_.readEnum(2);
            result = (Response)istr_.readEnum(2);
            istr_.endSlice();
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    [global::System.Serializable]
    public partial class Case1Response : CaseResponse
    {
        #region Slice data members

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public string price;

        #endregion

        partial void ice_initialize();

        #region Constructors

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case1Response() : base()
        {
            this.price = "";
            ice_initialize();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public Case1Response(@Case @case, Response result, string price) : base(@case, result)
        {
            this.price = price;
            ice_initialize();
        }

        #endregion

        private const string _id = "::Shared::Case1Response";

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public static new string ice_staticId()
        {
            return _id;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        public override string ice_id()
        {
            return _id;
        }

        #region Marshaling support

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        protected override void iceWriteImpl(global::Ice.OutputStream ostr_)
        {
            ostr_.startSlice(ice_staticId(), -1, false);
            ostr_.writeString(price);
            ostr_.endSlice();
            base.iceWriteImpl(ostr_);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        protected override void iceReadImpl(global::Ice.InputStream istr_)
        {
            istr_.startSlice();
            price = istr_.readString();
            istr_.endSlice();
            base.iceReadImpl(istr_);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface ClientProxy : global::Ice.Object, ClientProxyOperations_
    {
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface CaseSolver : global::Ice.Object, CaseSolverOperations_
    {
    }
}

namespace Shared
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public delegate void Callback_ClientProxy_caseResponseMessage();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public delegate void Callback_CaseSolver_logIn(CaseResponse[] ret);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public delegate void Callback_CaseSolver_case1(int ret);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public delegate void Callback_CaseSolver_case2(int ret);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public delegate void Callback_CaseSolver_case3(int ret);
}

namespace Shared
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public interface ClientProxyPrx : global::Ice.ObjectPrx
    {
        void caseResponseMessage(CaseResponse caseResponse, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task caseResponseMessageAsync(CaseResponse caseResponse, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_ClientProxy_caseResponseMessage> begin_caseResponseMessage(CaseResponse caseResponse, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_caseResponseMessage(CaseResponse caseResponse, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_caseResponseMessage(CaseResponse caseResponse, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        void end_caseResponseMessage(global::Ice.AsyncResult asyncResult);
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public interface CaseSolverPrx : global::Ice.ObjectPrx
    {
        CaseResponse[] logIn(ClientProxyPrx client, int clientId, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task<CaseResponse[]> logInAsync(ClientProxyPrx client, int clientId, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_CaseSolver_logIn> begin_logIn(ClientProxyPrx client, int clientId, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_logIn(ClientProxyPrx client, int clientId, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_logIn(ClientProxyPrx client, int clientId, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        CaseResponse[] end_logIn(global::Ice.AsyncResult asyncResult);

        int case1(Case1Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task<int> case1Async(Case1Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_CaseSolver_case1> begin_case1(Case1Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_case1(Case1Request @case, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_case1(Case1Request @case, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        int end_case1(global::Ice.AsyncResult asyncResult);

        int case2(Case2Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task<int> case2Async(Case2Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_CaseSolver_case2> begin_case2(Case2Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_case2(Case2Request @case, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_case2(Case2Request @case, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        int end_case2(global::Ice.AsyncResult asyncResult);

        int case3(Case3Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::System.Threading.Tasks.Task<int> case3Async(Case3Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken());

        global::Ice.AsyncResult<Callback_CaseSolver_case3> begin_case3(Case3Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext());

        global::Ice.AsyncResult begin_case3(Case3Request @case, global::Ice.AsyncCallback callback, object cookie);

        global::Ice.AsyncResult begin_case3(Case3Request @case, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie);

        int end_case3(global::Ice.AsyncResult asyncResult);
    }
}

namespace Shared
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public interface ClientProxyOperations_
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        void caseResponseMessage(CaseResponse caseResponse, global::Ice.Current current = null);
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public interface CaseSolverOperations_
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        global::System.Threading.Tasks.Task<CaseResponse[]> logInAsync(ClientProxyPrx client, int clientId, global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        int case1(Case1Request @case, global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        int case2(Case2Request @case, global::Ice.Current current = null);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
        int case3(Case3Request @case, global::Ice.Current current = null);
    }
}

namespace Shared
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public sealed class ListHelper
    {
        public static void write(global::Ice.OutputStream ostr, Case3SubModel[] v)
        {
            if(v == null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    (v[ix] == null ? new Case3SubModel() : v[ix]).ice_writeMembers(ostr);
                }
            }
        }

        public static Case3SubModel[] read(global::Ice.InputStream istr)
        {
            Case3SubModel[] v;
            {
                int szx = istr.readAndCheckSeqSize(5);
                v = new Case3SubModel[szx];
                for(int ix = 0; ix < szx; ++ix)
                {
                    v[ix] = new Case3SubModel();
                    v[ix].ice_readMembers(istr);
                }
            }
            return v;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public sealed class PrevResponsesHelper
    {
        public static void write(global::Ice.OutputStream ostr, CaseResponse[] v)
        {
            if(v == null)
            {
                ostr.writeSize(0);
            }
            else
            {
                ostr.writeSize(v.Length);
                for(int ix = 0; ix < v.Length; ++ix)
                {
                    ostr.writeValue(v[ix]);
                }
            }
        }

        public static CaseResponse[] read(global::Ice.InputStream istr)
        {
            CaseResponse[] v;
            {
                int szx = istr.readAndCheckSeqSize(1);
                v = new CaseResponse[szx];
                for(int ix = 0; ix < szx; ++ix)
                {
                    istr.readValue(global::IceInternal.Patcher.arrayReadValue<CaseResponse>(v, ix));
                }
            }
            return v;
        }
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    [global::System.Serializable]
    public sealed class ClientProxyPrxHelper : global::Ice.ObjectPrxHelperBase, ClientProxyPrx
    {
        public ClientProxyPrxHelper()
        {
        }

        public ClientProxyPrxHelper(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        #region Synchronous operations

        public void caseResponseMessage(CaseResponse caseResponse, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                _iceI_caseResponseMessageAsync(caseResponse, context, null, global::System.Threading.CancellationToken.None, true).Wait();
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        #endregion

        #region Async Task operations

        public global::System.Threading.Tasks.Task caseResponseMessageAsync(CaseResponse caseResponse, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_caseResponseMessageAsync(caseResponse, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task _iceI_caseResponseMessageAsync(CaseResponse iceP_caseResponse, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            var completed = new global::IceInternal.OperationTaskCompletionCallback<object>(progress, cancel);
            _iceI_caseResponseMessage(iceP_caseResponse, context, synchronous, completed);
            return completed.Task;
        }

        private const string _caseResponseMessage_name = "caseResponseMessage";

        private void _iceI_caseResponseMessage(CaseResponse iceP_caseResponse, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<object>(completed);
            outAsync.invoke(
                _caseResponseMessage_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    ostr.writeValue(iceP_caseResponse);
                    ostr.writePendingValues();
                });
        }

        #endregion

        #region Asynchronous operations

        public global::Ice.AsyncResult<Callback_ClientProxy_caseResponseMessage> begin_caseResponseMessage(CaseResponse caseResponse, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_caseResponseMessage(caseResponse, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_caseResponseMessage(CaseResponse caseResponse, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_caseResponseMessage(caseResponse, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_caseResponseMessage(CaseResponse caseResponse, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_caseResponseMessage(caseResponse, context, callback, cookie, false);
        }

        public void end_caseResponseMessage(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _caseResponseMessage_name);
            ((global::IceInternal.OutgoingAsyncT<object>)resultI_.OutgoingAsync).getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_ClientProxy_caseResponseMessage> begin_caseResponseMessage(CaseResponse iceP_caseResponse, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_ClientProxy_caseResponseMessage, object>(
                (Callback_ClientProxy_caseResponseMessage cb, object ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke();
                    }
                },
                this, _caseResponseMessage_name, cookie, completedCallback);
            _iceI_caseResponseMessage(iceP_caseResponse, context, synchronous, completed);
            return completed;
        }

        #endregion

        #region Checked and unchecked cast operations

        public static ClientProxyPrx checkedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ClientProxyPrx r = b as ClientProxyPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                ClientProxyPrxHelper h = new ClientProxyPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static ClientProxyPrx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            ClientProxyPrx r = b as ClientProxyPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                ClientProxyPrxHelper h = new ClientProxyPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static ClientProxyPrx checkedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    ClientProxyPrxHelper h = new ClientProxyPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ClientProxyPrx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    ClientProxyPrxHelper h = new ClientProxyPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ClientProxyPrx uncheckedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ClientProxyPrx r = b as ClientProxyPrx;
            if(r == null)
            {
                ClientProxyPrxHelper h = new ClientProxyPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static ClientProxyPrx uncheckedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            ClientProxyPrxHelper h = new ClientProxyPrxHelper();
            h.iceCopyFrom(bb);
            return h;
        }

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Shared::ClientProxy"
        };

        public static string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Marshaling support

        public static void write(global::Ice.OutputStream ostr, ClientProxyPrx v)
        {
            ostr.writeProxy(v);
        }

        public static ClientProxyPrx read(global::Ice.InputStream istr)
        {
            global::Ice.ObjectPrx proxy = istr.readProxy();
            if(proxy != null)
            {
                ClientProxyPrxHelper result = new ClientProxyPrxHelper();
                result.iceCopyFrom(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    [global::System.Serializable]
    public sealed class CaseSolverPrxHelper : global::Ice.ObjectPrxHelperBase, CaseSolverPrx
    {
        public CaseSolverPrxHelper()
        {
        }

        public CaseSolverPrxHelper(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        #region Synchronous operations

        public CaseResponse[] logIn(ClientProxyPrx client, int clientId, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                return _iceI_logInAsync(client, clientId, context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public int case1(Case1Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                return _iceI_case1Async(@case, context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public int case2(Case2Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                return _iceI_case2Async(@case, context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        public int case3(Case3Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            try
            {
                return _iceI_case3Async(@case, context, null, global::System.Threading.CancellationToken.None, true).Result;
            }
            catch(global::System.AggregateException ex_)
            {
                throw ex_.InnerException;
            }
        }

        #endregion

        #region Async Task operations

        public global::System.Threading.Tasks.Task<CaseResponse[]> logInAsync(ClientProxyPrx client, int clientId, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_logInAsync(client, clientId, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<CaseResponse[]> _iceI_logInAsync(ClientProxyPrx iceP_client, int iceP_clientId, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_logIn_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<CaseResponse[]>(progress, cancel);
            _iceI_logIn(iceP_client, iceP_clientId, context, synchronous, completed);
            return completed.Task;
        }

        private const string _logIn_name = "logIn";

        private void _iceI_logIn(ClientProxyPrx iceP_client, int iceP_clientId, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<CaseResponse[]>(completed);
            outAsync.invoke(
                _logIn_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    ClientProxyPrxHelper.write(ostr, iceP_client);
                    ostr.writeInt(iceP_clientId);
                },
                read: (global::Ice.InputStream istr) =>
                {
                    CaseResponse[] ret;
                    ret = PrevResponsesHelper.read(istr);
                    istr.readPendingValues();
                    return ret;
                });
        }

        public global::System.Threading.Tasks.Task<int> case1Async(Case1Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_case1Async(@case, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<int> _iceI_case1Async(Case1Request iceP_case, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_case1_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<int>(progress, cancel);
            _iceI_case1(iceP_case, context, synchronous, completed);
            return completed.Task;
        }

        private const string _case1_name = "case1";

        private void _iceI_case1(Case1Request iceP_case, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<int>(completed);
            outAsync.invoke(
                _case1_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    Case1Request.ice_write(ostr, iceP_case);
                },
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(CaseError)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                },
                read: (global::Ice.InputStream istr) =>
                {
                    int ret;
                    ret = istr.readInt();
                    return ret;
                });
        }

        public global::System.Threading.Tasks.Task<int> case2Async(Case2Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_case2Async(@case, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<int> _iceI_case2Async(Case2Request iceP_case, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_case2_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<int>(progress, cancel);
            _iceI_case2(iceP_case, context, synchronous, completed);
            return completed.Task;
        }

        private const string _case2_name = "case2";

        private void _iceI_case2(Case2Request iceP_case, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<int>(completed);
            outAsync.invoke(
                _case2_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    iceP_case.ice_writeMembers(ostr);
                },
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(CaseError)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                },
                read: (global::Ice.InputStream istr) =>
                {
                    int ret;
                    ret = istr.readInt();
                    return ret;
                });
        }

        public global::System.Threading.Tasks.Task<int> case3Async(Case3Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext(), global::System.IProgress<bool> progress = null, global::System.Threading.CancellationToken cancel = new global::System.Threading.CancellationToken())
        {
            return _iceI_case3Async(@case, context, progress, cancel, false);
        }

        private global::System.Threading.Tasks.Task<int> _iceI_case3Async(Case3Request iceP_case, global::Ice.OptionalContext context, global::System.IProgress<bool> progress, global::System.Threading.CancellationToken cancel, bool synchronous)
        {
            iceCheckTwowayOnly(_case3_name);
            var completed = new global::IceInternal.OperationTaskCompletionCallback<int>(progress, cancel);
            _iceI_case3(iceP_case, context, synchronous, completed);
            return completed.Task;
        }

        private const string _case3_name = "case3";

        private void _iceI_case3(Case3Request iceP_case, global::System.Collections.Generic.Dictionary<string, string> context, bool synchronous, global::IceInternal.OutgoingAsyncCompletionCallback completed)
        {
            var outAsync = getOutgoingAsync<int>(completed);
            outAsync.invoke(
                _case3_name,
                global::Ice.OperationMode.Normal,
                global::Ice.FormatType.DefaultFormat,
                context,
                synchronous,
                write: (global::Ice.OutputStream ostr) =>
                {
                    Case3Request.ice_write(ostr, iceP_case);
                },
                userException: (global::Ice.UserException ex) =>
                {
                    try
                    {
                        throw ex;
                    }
                    catch(CaseError)
                    {
                        throw;
                    }
                    catch(global::Ice.UserException)
                    {
                    }
                },
                read: (global::Ice.InputStream istr) =>
                {
                    int ret;
                    ret = istr.readInt();
                    return ret;
                });
        }

        #endregion

        #region Asynchronous operations

        public global::Ice.AsyncResult<Callback_CaseSolver_logIn> begin_logIn(ClientProxyPrx client, int clientId, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_logIn(client, clientId, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_logIn(ClientProxyPrx client, int clientId, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_logIn(client, clientId, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_logIn(ClientProxyPrx client, int clientId, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_logIn(client, clientId, context, callback, cookie, false);
        }

        public CaseResponse[] end_logIn(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _logIn_name);
            var outgoing_ = (global::IceInternal.OutgoingAsyncT<CaseResponse[]>)resultI_.OutgoingAsync;
            return outgoing_.getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_CaseSolver_logIn> begin_logIn(ClientProxyPrx iceP_client, int iceP_clientId, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_logIn_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_CaseSolver_logIn, CaseResponse[]>(
                (Callback_CaseSolver_logIn cb, CaseResponse[] ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke(ret);
                    }
                },
                this, _logIn_name, cookie, completedCallback);
            _iceI_logIn(iceP_client, iceP_clientId, context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_CaseSolver_case1> begin_case1(Case1Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_case1(@case, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_case1(Case1Request @case, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_case1(@case, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_case1(Case1Request @case, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_case1(@case, context, callback, cookie, false);
        }

        public int end_case1(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _case1_name);
            var outgoing_ = (global::IceInternal.OutgoingAsyncT<int>)resultI_.OutgoingAsync;
            return outgoing_.getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_CaseSolver_case1> begin_case1(Case1Request iceP_case, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_case1_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_CaseSolver_case1, int>(
                (Callback_CaseSolver_case1 cb, int ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke(ret);
                    }
                },
                this, _case1_name, cookie, completedCallback);
            _iceI_case1(iceP_case, context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_CaseSolver_case2> begin_case2(Case2Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_case2(@case, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_case2(Case2Request @case, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_case2(@case, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_case2(Case2Request @case, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_case2(@case, context, callback, cookie, false);
        }

        public int end_case2(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _case2_name);
            var outgoing_ = (global::IceInternal.OutgoingAsyncT<int>)resultI_.OutgoingAsync;
            return outgoing_.getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_CaseSolver_case2> begin_case2(Case2Request iceP_case, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_case2_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_CaseSolver_case2, int>(
                (Callback_CaseSolver_case2 cb, int ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke(ret);
                    }
                },
                this, _case2_name, cookie, completedCallback);
            _iceI_case2(iceP_case, context, synchronous, completed);
            return completed;
        }

        public global::Ice.AsyncResult<Callback_CaseSolver_case3> begin_case3(Case3Request @case, global::Ice.OptionalContext context = new global::Ice.OptionalContext())
        {
            return begin_case3(@case, context, null, null, false);
        }

        public global::Ice.AsyncResult begin_case3(Case3Request @case, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_case3(@case, new global::Ice.OptionalContext(), callback, cookie, false);
        }

        public global::Ice.AsyncResult begin_case3(Case3Request @case, global::Ice.OptionalContext context, global::Ice.AsyncCallback callback, object cookie)
        {
            return begin_case3(@case, context, callback, cookie, false);
        }

        public int end_case3(global::Ice.AsyncResult asyncResult)
        {
            var resultI_ = global::IceInternal.AsyncResultI.check(asyncResult, this, _case3_name);
            var outgoing_ = (global::IceInternal.OutgoingAsyncT<int>)resultI_.OutgoingAsync;
            return outgoing_.getResult(resultI_.wait());
        }

        private global::Ice.AsyncResult<Callback_CaseSolver_case3> begin_case3(Case3Request iceP_case, global::System.Collections.Generic.Dictionary<string, string> context, global::Ice.AsyncCallback completedCallback, object cookie, bool synchronous)
        {
            iceCheckAsyncTwowayOnly(_case3_name);
            var completed = new global::IceInternal.OperationAsyncResultCompletionCallback<Callback_CaseSolver_case3, int>(
                (Callback_CaseSolver_case3 cb, int ret) =>
                {
                    if(cb != null)
                    {
                        cb.Invoke(ret);
                    }
                },
                this, _case3_name, cookie, completedCallback);
            _iceI_case3(iceP_case, context, synchronous, completed);
            return completed;
        }

        #endregion

        #region Checked and unchecked cast operations

        public static CaseSolverPrx checkedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            CaseSolverPrx r = b as CaseSolverPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                CaseSolverPrxHelper h = new CaseSolverPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static CaseSolverPrx checkedCast(global::Ice.ObjectPrx b, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            CaseSolverPrx r = b as CaseSolverPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                CaseSolverPrxHelper h = new CaseSolverPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static CaseSolverPrx checkedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    CaseSolverPrxHelper h = new CaseSolverPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static CaseSolverPrx checkedCast(global::Ice.ObjectPrx b, string f, global::System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    CaseSolverPrxHelper h = new CaseSolverPrxHelper();
                    h.iceCopyFrom(bb);
                    return h;
                }
            }
            catch(global::Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static CaseSolverPrx uncheckedCast(global::Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            CaseSolverPrx r = b as CaseSolverPrx;
            if(r == null)
            {
                CaseSolverPrxHelper h = new CaseSolverPrxHelper();
                h.iceCopyFrom(b);
                r = h;
            }
            return r;
        }

        public static CaseSolverPrx uncheckedCast(global::Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            global::Ice.ObjectPrx bb = b.ice_facet(f);
            CaseSolverPrxHelper h = new CaseSolverPrxHelper();
            h.iceCopyFrom(bb);
            return h;
        }

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Shared::CaseSolver"
        };

        public static string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Marshaling support

        public static void write(global::Ice.OutputStream ostr, CaseSolverPrx v)
        {
            ostr.writeProxy(v);
        }

        public static CaseSolverPrx read(global::Ice.InputStream istr)
        {
            global::Ice.ObjectPrx proxy = istr.readProxy();
            if(proxy != null)
            {
                CaseSolverPrxHelper result = new CaseSolverPrxHelper();
                result.iceCopyFrom(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace Shared
{
    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public abstract class ClientProxyDisp_ : global::Ice.ObjectImpl, ClientProxy
    {
        #region Slice operations

        public abstract void caseResponseMessage(CaseResponse caseResponse, global::Ice.Current current = null);

        #endregion

        #region Slice type-related members

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Shared::ClientProxy"
        };

        public override bool ice_isA(string s, global::Ice.Current current = null)
        {
            return global::System.Array.BinarySearch(_ids, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids(global::Ice.Current current = null)
        {
            return _ids;
        }

        public override string ice_id(global::Ice.Current current = null)
        {
            return _ids[1];
        }

        public static new string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Operation dispatch

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_caseResponseMessage(ClientProxy obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            CaseResponse iceP_caseResponse;
            iceP_caseResponse = null;
            istr.readValue((CaseResponse v) => {iceP_caseResponse = v; });
            istr.readPendingValues();
            inS.endReadParams();
            obj.caseResponseMessage(iceP_caseResponse, current);
            return inS.setResult(inS.writeEmptyParams());
        }

        private static readonly string[] _all =
        {
            "caseResponseMessage",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceDispatch(global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            int pos = global::System.Array.BinarySearch(_all, current.operation, global::IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return iceD_caseResponseMessage(this, inS, current);
                }
                case 1:
                {
                    return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                }
                case 2:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                }
                case 3:
                {
                    return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                }
                case 4:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                }
            }

            global::System.Diagnostics.Debug.Assert(false);
            throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
        }

        #endregion
    }

    [global::System.Runtime.InteropServices.ComVisible(false)]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.5")]
    public abstract class CaseSolverDisp_ : global::Ice.ObjectImpl, CaseSolver
    {
        #region Slice operations

        public abstract global::System.Threading.Tasks.Task<CaseResponse[]> logInAsync(ClientProxyPrx client, int clientId, global::Ice.Current current = null);

        public abstract int case1(Case1Request @case, global::Ice.Current current = null);

        public abstract int case2(Case2Request @case, global::Ice.Current current = null);

        public abstract int case3(Case3Request @case, global::Ice.Current current = null);

        #endregion

        #region Slice type-related members

        private static readonly string[] _ids =
        {
            "::Ice::Object",
            "::Shared::CaseSolver"
        };

        public override bool ice_isA(string s, global::Ice.Current current = null)
        {
            return global::System.Array.BinarySearch(_ids, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids(global::Ice.Current current = null)
        {
            return _ids;
        }

        public override string ice_id(global::Ice.Current current = null)
        {
            return _ids[1];
        }

        public static new string ice_staticId()
        {
            return _ids[1];
        }

        #endregion

        #region Operation dispatch

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_logIn(CaseSolver obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            ClientProxyPrx iceP_client;
            int iceP_clientId;
            iceP_client = ClientProxyPrxHelper.read(istr);
            iceP_clientId = istr.readInt();
            inS.endReadParams();
            return inS.setResultTask<CaseResponse[]>(obj.logInAsync(iceP_client, iceP_clientId, current),
                (ostr, ret) =>
                {
                    PrevResponsesHelper.write(ostr, ret);
                    ostr.writePendingValues();
                });
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_case1(CaseSolver obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            Case1Request iceP_case;
            iceP_case = null;
            iceP_case = Case1Request.ice_read(istr);
            inS.endReadParams();
            var ret = obj.case1(iceP_case, current);
            var ostr = inS.startWriteParams();
            ostr.writeInt(ret);
            inS.endWriteParams(ostr);
            return inS.setResult(ostr);
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_case2(CaseSolver obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            Case2Request iceP_case;
            iceP_case = new Case2Request();
            iceP_case.ice_readMembers(istr);
            inS.endReadParams();
            var ret = obj.case2(iceP_case, current);
            var ostr = inS.startWriteParams();
            ostr.writeInt(ret);
            inS.endWriteParams(ostr);
            return inS.setResult(ostr);
        }

        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceD_case3(CaseSolver obj, global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            global::Ice.ObjectImpl.iceCheckMode(global::Ice.OperationMode.Normal, current.mode);
            var istr = inS.startReadParams();
            Case3Request iceP_case;
            iceP_case = null;
            iceP_case = Case3Request.ice_read(istr);
            inS.endReadParams();
            var ret = obj.case3(iceP_case, current);
            var ostr = inS.startWriteParams();
            ostr.writeInt(ret);
            inS.endWriteParams(ostr);
            return inS.setResult(ostr);
        }

        private static readonly string[] _all =
        {
            "case1",
            "case2",
            "case3",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "logIn"
        };

        public override global::System.Threading.Tasks.Task<global::Ice.OutputStream>
        iceDispatch(global::IceInternal.Incoming inS, global::Ice.Current current)
        {
            int pos = global::System.Array.BinarySearch(_all, current.operation, global::IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return iceD_case1(this, inS, current);
                }
                case 1:
                {
                    return iceD_case2(this, inS, current);
                }
                case 2:
                {
                    return iceD_case3(this, inS, current);
                }
                case 3:
                {
                    return global::Ice.ObjectImpl.iceD_ice_id(this, inS, current);
                }
                case 4:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ids(this, inS, current);
                }
                case 5:
                {
                    return global::Ice.ObjectImpl.iceD_ice_isA(this, inS, current);
                }
                case 6:
                {
                    return global::Ice.ObjectImpl.iceD_ice_ping(this, inS, current);
                }
                case 7:
                {
                    return iceD_logIn(this, inS, current);
                }
            }

            global::System.Diagnostics.Debug.Assert(false);
            throw new global::Ice.OperationNotExistException(current.id, current.facet, current.operation);
        }

        #endregion
    }
}
